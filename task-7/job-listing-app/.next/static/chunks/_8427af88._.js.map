{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP%20EliteBook/Desktop/web-track/A2SV-web-track-projects/task-7/job-listing-app/redux/features/jobs/jobSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// Define proper Job type interface\r\ninterface Job {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  company: string;\r\n  // Add other job properties you expect\r\n}\r\n\r\ninterface JobState {\r\n  jobs: Job[];\r\n  currentJob: Job | null;\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: JobState = {\r\n  jobs: [],\r\n  currentJob: null,\r\n  status: \"idle\",\r\n  error: null,\r\n};\r\n\r\nconst API_URL = \"https://akil-backend.onrender.com/opportunities/search\";\r\n\r\nexport const fetchJobs = createAsyncThunk(\r\n  \"jobs/fetchJobs\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n\r\n      // Handle different possible response structures\r\n      const jobsData =\r\n        response.data?.data || // If nested under 'data'\r\n        response.data?.jobs || // If nested under 'jobs'\r\n        response.data?.results || // If paginated API\r\n        response.data; // Default\r\n\r\n      // Ensure we always return an array\r\n      return Array.isArray(jobsData) ? jobsData : [];\r\n    } catch (error: any) {\r\n      return rejectWithValue(\r\n        error.response?.data?.message || \"Failed to fetch jobs\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchJobById = createAsyncThunk(\r\n  \"jobs/fetchJobById\",\r\n  async (id: string, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://akil-backend.onrender.com/opportunities/${id}`\r\n      );\r\n      return response.data;\r\n    } catch (error: any) {\r\n      return rejectWithValue(\r\n        error.response?.data?.message || \"Failed to fetch job\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst jobsSlice = createSlice({\r\n  name: \"jobs\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchJobs.pending, (state) => {\r\n        state.status = \"loading\";\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchJobs.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.jobs = action.payload;\r\n      })\r\n      .addCase(fetchJobs.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = (action.payload as string) || \"Failed to fetch jobs\";\r\n      })\r\n      .addCase(fetchJobById.pending, (state) => {\r\n        state.status = \"loading\";\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchJobById.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.currentJob = action.payload;\r\n      })\r\n      .addCase(fetchJobById.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error =\r\n          (action.payload as string) || \"Failed to fetch job details\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default jobsSlice.reducer;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAkBA,MAAM,eAAyB;IAC7B,MAAM,EAAE;IACR,YAAY;IACZ,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,UAAU;AAET,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EACtC,kBACA,OAAO;QAAG,EAAE,eAAe,EAAE;IAC3B,IAAI;YAKA,gBAAuB,yBAAyB;QAChD,iBAAuB,yBAAyB;QAChD;QANF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;QAEjC,gDAAgD;QAChD,MAAM,WACJ,EAAA,iBAAA,SAAS,IAAI,cAAb,qCAAA,eAAe,IAAI,OACnB,kBAAA,SAAS,IAAI,cAAb,sCAAA,gBAAe,IAAI,OACnB,kBAAA,SAAS,IAAI,cAAb,sCAAA,gBAAe,OAAO,KAAI,mBAAmB;QAC7C,SAAS,IAAI,EAAE,UAAU;QAE3B,mCAAmC;QACnC,OAAO,MAAM,OAAO,CAAC,YAAY,WAAW,EAAE;IAChD,EAAE,OAAO,OAAY;YAEjB,sBAAA;QADF,OAAO,gBACL,EAAA,kBAAA,MAAM,QAAQ,cAAd,uCAAA,uBAAA,gBAAgB,IAAI,cAApB,2CAAA,qBAAsB,OAAO,KAAI;IAErC;AACF;AAGK,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EACzC,qBACA,OAAO;QAAY,EAAE,eAAe,EAAE;IACpC,IAAI;QACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,AAAC,mDAAqD,OAAH;QAErD,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;YAEjB,sBAAA;QADF,OAAO,gBACL,EAAA,kBAAA,MAAM,QAAQ,cAAd,uCAAA,uBAAA,gBAAgB,IAAI,cAApB,2CAAA,qBAAsB,OAAO,KAAI;IAErC;AACF;AAGF,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAc,OAAO;QACnB,QACG,OAAO,CAAC,UAAU,OAAO,EAAE,CAAC;YAC3B,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,UAAU,SAAS,EAAE,CAAC,OAAO;YACpC,MAAM,MAAM,GAAG;YACf,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,UAAU,QAAQ,EAAE,CAAC,OAAO;YACnC,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GAAG,AAAC,OAAO,OAAO,IAAe;QAC9C,GACC,OAAO,CAAC,aAAa,OAAO,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,aAAa,SAAS,EAAE,CAAC,OAAO;YACvC,MAAM,MAAM,GAAG;YACf,MAAM,UAAU,GAAG,OAAO,OAAO;QACnC,GACC,OAAO,CAAC,aAAa,QAAQ,EAAE,CAAC,OAAO;YACtC,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GACT,AAAC,OAAO,OAAO,IAAe;QAClC;IACJ;AACF;uCAEe,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP%20EliteBook/Desktop/web-track/A2SV-web-track-projects/task-7/job-listing-app/redux/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport jobsReducer from \"@/redux/features/jobs/jobSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    jobs: jobsReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,wIAAA,CAAA,UAAW;IACnB;AACF","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP%20EliteBook/Desktop/web-track/A2SV-web-track-projects/task-7/job-listing-app/app/ReduxProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { ReactNode } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from '@/redux/store'\r\n\r\nexport default function ReduxProvider({ children }: { children: ReactNode }) {\r\n  return <Provider store={store}>{children}</Provider>\r\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMe,SAAS,cAAc,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;IACpC,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,iHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFwB","debugId":null}}]
}